def minecraft_version="1.11.2"
def jei_version="4.5.0.294"
def nei_version="2.3.0.227"
def ccl_version="3.0.0.328"
def version_mjrlegendslib="1.11.2-1.1.1"
def version_galacticraft="1.11.2-4.0.1.178"
def version_mekanism="1.11.2-9.3.5.206"
def version_ic2="2.7.9-ex111"

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
	maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
	maven {
	    name 'Redstone Flux'
	    url = "http://maven.covers1624.net"
    }
	maven {
	    name 'IC2'
	    url = "http://maven.ic2.player.to"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.11.2-0.8.0"
group= "com.mjr.extraplanets" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ExtraPlanets"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.11.2-13.20.1.2513"
    runDir = "run"
    mappings = "snapshot_20161220"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile "mezz.jei:jei_${minecraft_version}:${jei_version}:api"
    compile "codechicken:NotEnoughItems:${minecraft_version}-${nei_version}:deobf"
    compile "codechicken:CodeChickenLib:${minecraft_version}-${ccl_version}:deobf"
	compile "net.industrial-craft:industrialcraft-2:${version_ic2}:api"
	compile files (
		"Galacticraft-API-${version_galacticraft}.jar",
		"GalacticraftCore-Dev-${version_galacticraft}.jar",
		"Galacticraft-Planets-Dev-${version_galacticraft}.jar",
		"MicdoodleCore-Dev-${version_galacticraft}.jar",
		"MJRLegendsLib-${version_mjrlegendslib}-dev.jar",
		"Mekanism-${version_mekanism}-api.jar",
		"CoFHCore-1.11.2-4.2.8.16-universal.jar"
	)
	runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"
    runtime "codechicken:NotEnoughItems:${minecraft_version}-${nei_version}:deobf"
    runtime "codechicken:CodeChickenLib:${minecraft_version}-${ccl_version}:deobf"
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'       
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
	//manifest {
    //    attributes.put("FMLAT", "extraplanets_at.cfg")
    //    attributes.put("FMLCorePluginContainsFMLMod", "true")
    //}
}

task apiJar(type: Jar) {
    from(sourceSets.main.java) {
        include "com/mjr/extraplanets/api/**"
    }
    classifier = 'api'
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build.dependsOn signJar